{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst startBtn = document.querySelector('[data-start]');\nconst dateInput = document.querySelector('#datetime-picker');\n\nlet userSelectedDate = null;\nlet countdownInterval = null;\n\nconst options = {\n    enableTime: true,\n    time_24h: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        const selected = selectedDates[0];\n\n        if (selected <= new Date()) {\n            iziToast.error({\n                title: 'Error',\n                message: 'Please choose a date in the future',\n                position: 'topRight',\n            });\n            startBtn.disabled = true;\n        } else {\n            userSelectedDate = selected;\n            startBtn.disabled = false;\n        }\n    },\n};\n\nflatpickr(dateInput, options);\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds }; \n}\n\nfunction addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n}\n\nfunction updateTimerUI({ days, hours, minutes, seconds }) {\n    document.querySelector('[data-days]').textContent = days;\n    document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n    document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n    document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n}\n\nstartBtn.addEventListener('click', () => {\n    startBtn.disabled = true;\n    dateInput.disabled = true;\n\n    countdownInterval = setInterval(() => {\n        const now = new Date();\n        const msLeft = userSelectedDate - now;\n\n        if (msLeft <= 0) {\n            clearInterval(countdownInterval);\n            updateTimerUI({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n            dateInput.disabled = false;\n            return;\n        }\n\n        const time = convertMs(msLeft);\n        updateTimerUI(time);\n    }, 1000);\n});"],"names":["startBtn","dateInput","userSelectedDate","countdownInterval","options","selectedDates","selected","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","updateTimerUI","msLeft","time"],"mappings":"2GAMA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAY,SAAS,cAAc,kBAAkB,EAE3D,IAAIC,EAAmB,KACnBC,EAAoB,KAExB,MAAMC,EAAU,CACZ,WAAY,GACZ,SAAU,GACV,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,MAAMC,EAAWD,EAAc,CAAC,EAE5BC,GAAY,IAAI,MAChBC,EAAS,MAAM,CACX,MAAO,QACP,QAAS,qCACT,SAAU,UAC1B,CAAa,EACDP,EAAS,SAAW,KAEpBE,EAAmBI,EACnBN,EAAS,SAAW,GAE3B,CACL,EAEAQ,EAAUP,EAAWG,CAAO,EAE5B,SAASK,EAAUC,EAAI,CAMnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,SAASC,EAAeC,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACxC,CAEA,SAASC,EAAc,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACtD,SAAS,cAAc,aAAa,EAAE,YAAcH,EACpD,SAAS,cAAc,cAAc,EAAE,YAAcI,EAAeH,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcG,EAAeF,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcE,EAAeD,CAAO,CACjF,CAEAd,EAAS,iBAAiB,QAAS,IAAM,CACrCA,EAAS,SAAW,GACpBC,EAAU,SAAW,GAErBE,EAAoB,YAAY,IAAM,CAElC,MAAMe,EAAShB,EADH,IAAI,KAGhB,GAAIgB,GAAU,EAAG,CACb,cAAcf,CAAiB,EAC/Bc,EAAc,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAC3DhB,EAAU,SAAW,GACrB,MACH,CAED,MAAMkB,EAAOV,EAAUS,CAAM,EAC7BD,EAAcE,CAAI,CACrB,EAAE,GAAI,CACX,CAAC"}